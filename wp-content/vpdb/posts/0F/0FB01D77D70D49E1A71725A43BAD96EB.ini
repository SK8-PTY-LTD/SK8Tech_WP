[0FB01D77D70D49E1A71725A43BAD96EB]
post_date = "2017-05-22 23:29:46"
post_date_gmt = "2017-05-22 13:29:46"
post_content = "
				
								
				
													
				
	
	<p>You&nbsp;probably heard about the&nbsp;<a data-original-title=\"\" href=\"http://www.cbsnews.com/news/amazon-web-services-cloud-outage-internet-crashes/\" target=\"_blank\">outage&nbsp;in late February</a>&nbsp;that hit Amazon Web Services (AWS), the company&rsquo;s cloud-computing service. Amazon is the country&rsquo;s largest service provider of cloud computing for businesses, and thousands of websites and apps that rely on its services found themselves in freak-out mode due to the interruption.</p><p>What happened was this: Amazon&rsquo;s Simple Storage Service (S3) went down; and, instantly, Amazon clients couldn&rsquo;t access all kinds of things they&rsquo;d stored remotely on the company&rsquo;s servers -- everything from images to customer transaction data.</p><p><strong>Related:&nbsp;<a data-original-title=\"\" href=\"https://www.entrepreneur.com/article/290020\" target=\"_blank\">When Amazon Makes a Mistake, Expect a Prompt, Overly Detailed Response</a></strong></p><p>The cause of the outage was eventually identified as&nbsp;<a data-original-title=\"\" href=\"https://www.recode.net/2017/3/2/14792636/amazon-aws-internet-outage-cause-human-error-incorrect-command\" target=\"_blank\">human error</a>, and the chaos was compounded by the fact that other AWS services rely on S3 for storage. And the danger is not over: In spite of Amazon&#39;s being known for its very reliable track record, just such an outage will inevitably happen again.</p><p>That&#39;s why small businesses must learn from past mistakes and be ready for the next outage that comes along.</p><h2><strong>The scars remain</strong></h2><p>Because so many businesses rely on S3 -- more than&nbsp;<a data-original-title=\"\" href=\"https://techcrunch.com/2017/02/28/amazon-aws-s3-outage-is-breaking-things-for-a-lot-of-websites-and-apps/\" target=\"_blank\">148,000 websites</a>, according to TechCrunch -- the outage had far-reaching ramifications, from small inconveniences to the complete erosion of business models and revenue drivers.</p><p>Popular image- and link-sharing site Pinterest uses AWS, which meant that during the outage, everyone from soon-to-be brides keeping track of their favorite wedding decorations, to 18-year-olds recording their burgeoning tattoo ideas,was unable to build their libraries. While this doesn&rsquo;t seem too terribly consequential, it&rsquo;s evidence of how an outage can directly affect the lives of millions of users.</p><p>Any company that, say, chose to build its entire infrastructure on Amazon undoubtedly experienced a little bit of panic when its logins ceased to work. Data feeds of hotel prices, user activity, photographs, favorited sites and product offers delivered only a spinning wheel of death for those who attempted to load them. Few were spared -- not <em>Business Insider </em>or Giphy, or countless IoT-connected thermostats and lightbulbs.</p><h2><strong>Hope for the future</strong></h2><p>Luckily, Amazon was able to get its systems back on track in relatively short order. But its previous image as an immovable, unbreakable pillar in the hosting community no doubt suffered. Moreover, the incident got the attention of quite a few developers and helped them realize that having a backup plan is probably a decent strategy.</p><p><strong>Related:&nbsp;<a data-original-title=\"\" href=\"https://www.entrepreneur.com/article/272016\" target=\"_blank\">5 Vital Considerations When Choosing Your Web Hosting Service</a> </strong></p><p>If you&rsquo;re one of these developers or the leader of a small business, pay attention to the tips below while formulating your plan.</p><h2><strong>1. Divide the duties.</strong>&nbsp;</h2><p>Make sure your hosted scripts aren&rsquo;t solely reliant on one service. Handing your entire operation over to an outside service -- such as Microsoft or Amazon -- will cut you off from the necessary controls that allow you to address threats or outages when they occur.</p><p>If your budget allows, set up more than one hosting service in case the primary source falls through. Simple checks can ensure that if the original source isn&rsquo;t available, a fallback to another host -- or even a locally hosted source -- can keep your site running.</p><h2><strong>2. Rack up redundancies.&nbsp;</strong></h2><p>If your entire project really is reliant on AWS capabilities, the alternative is to build up a secondary source -- hosted elsewhere -- to operate in a redundant fashion. This way, when one service goes down, the product can keep moving along, with little to no interruption.</p><p>Of course, the difficulty of this is monumental. While Microsoft Azure or Google offers comparatively robust packages for scaling, the way these operate is often significantly different than AWS does. Many of the items that come prebuilt with AWS simply won&rsquo;t be available on Google or other services. This means you&rsquo;ll either need to invest in extensive custom development to create similar functionality or set a preplanned goal to limit your system&rsquo;s reliance on AWS-specific capabilities.</p><h2><strong>3. Fancify your failures.&nbsp;</strong></h2><p>Even with the strongest precautions in place, the occasional outage is inevitable. In this event, make sure your failure points are graceful. When a user gets an ugly AWS message that&rsquo;s practically indecipherable, it creates a feeling of panic and anxiety. Instead, plan for these types of situations with useful, friendly and self-effacing messages that actually give the user an idea of what&rsquo;s happening.</p><p>For example, if my website at&nbsp;<a data-original-title=\"\" href=\"http://rocksaucestudios.com/\" target=\"_blank\">Rocksauce Studios</a>&nbsp;goes down, users aren&rsquo;t faced with a vomit of incomprehensible code. Instead, a friendly message pops up saying, &ldquo;Oops!&rdquo;&nbsp;before offering users the ability to either try again or contact our support team for help. Not only does this show our awareness of the problem, but it also offers an avenue for users to reach out for a fix.</p><h2><strong>4. Give the gift of gab.</strong>&nbsp;</h2><p>Be ready to communicate with your users. This is perhaps the most important factor because having a completely independent back-up system -- whether you&rsquo;re a company such as Netflix or a small bootstrapping <a href=\"<<[site-url]>>/services/startup-consulting/\" title=\"StartUp\" target=\"_blank\">StartUp</a> -- is an extreme solution, given the presumably rare nature of the problem. Instead, having a well-formed response to send to users via email, Twitter, Facebook or other means can provide you with the necessary grace.&nbsp;</p><p><a data-original-title=\"\" href=\"https://useriq.com/aws-outage-effective-customer-communication/\" target=\"_blank\">Responding promptly to customer inquiries</a>,&nbsp;even when you don&rsquo;t have the answer, goes a long way toward showing that you care about your customers and are aware of the problem.</p><p><strong>Related:&nbsp;<a data-original-title=\"\" href=\"https://www.entrepreneur.com/article/225502\" target=\"_blank\">Does Your Website Have a Crash Plan?</a></strong></p><p>The reliability of cloud hosting services is measured in &ldquo;uptime,&rdquo; or the amount of time these services are working and available. Most companies do everything possible to keep their uptime as close to 100 percent as they can, meaning they&#39;re not likely to experience regular outages any time soon. That being said, taking a few simple precautionary measures can go a long way toward easing the pains of an outage should one happen to hit your hosting services in the future.</p>

	

				
									<div data-type=\"article-footer-promo\"></div>

																		<div>
																	<div>
										<a href=\"https://www.entrepreneur.com/author/q-manning\" rel=\"author\" itemprop=\"author\" itemscope itemtype=\"https://schema.org/Person\" >
											<img src=\"https://assets.entrepreneur.com/content/1x1/124/20160331181538-QManning.jpeg\" alt=\"4 Ways to Prepare for the Next Apocalyptic Amazon Web Services Outage\" />
										</a>
									</div>
								
								<div>
									<h2>Q Manning</h2>

																			<div>
																							<a href=\"http://rocksaucestudios.com/\" target=\"_blank\" data-tooltip=\"Q Manning's Website\"><i></i></a>
																							<a href=\"https://www.twitter.com/QManning\" target=\"_blank\" data-tooltip=\"Follow @QManning\"><i></i></a>
																							<a href=\"https://www.linkedin.com/in/qmanning\" target=\"_blank\" data-tooltip=\"Q Manning on LinkedIn\"><i></i></a>
																					</div>
									
									<div>
										<p>Q Manning is CEO of Rocksauce Studios,&nbsp;which crafts custom mobile apps for all platforms. Rocksauce Studios&rsquo; goal is to create an amazing <a href=\"<<[site-url]>>/services/ui-ux/\" title=\"User Experience\" target=\"_blank\">User Experience</a> that can succeed in the marketplace when coupled with powerful, eye-catchin...</p>
										<a href=\"https://www.entrepreneur.com/author/q-manning\" rel=\"author\" itemprop=\"author\" itemscope itemtype=\"https://schema.org/Person\" >Read more</a>
									</div>
								</div>
							</div>
											
																	<div ></div>
					
				
			"
post_title = "4 Ways to Prepare for the Next Apocalyptic Amazon Web Services Outage"
post_excerpt = ""
post_status = "publish"
comment_status = "open"
ping_status = "open"
post_password = ""
post_name = "4-ways-to-prepare-for-the-next-apocalyptic-amazon-web-services-outage"
to_ping = ""
pinged = ""
post_modified = "2017-05-22 23:29:46"
post_modified_gmt = "2017-05-22 13:29:46"
post_content_filtered = ""
guid = "https://sk8.tech/4-ways-to-prepare-for-the-next-apocalyptic-amazon-web-services-outage/"
menu_order = "0"
post_type = "post"
post_mime_type = ""
vp_post_author = "08A18EE9B54B47FF8FBFE760E0967111"
vp_post_parent = 0
vp_term_taxonomy[0] = "012AED39C5174AEE93A389FBDBD9F8A7"
vp_term_taxonomy[1] = "03630BF2792F46D1B76CAC4F64E264BE"
dpsp_networks_shares#D94E2A10977647498F02BD4988C07EB1 = <<<serialized>>> <array>
dpsp_networks_shares#D94E2A10977647498F02BD4988C07EB1["facebook"] = 0
dpsp_networks_shares#D94E2A10977647498F02BD4988C07EB1["google-plus"] = 0
dpsp_networks_shares#D94E2A10977647498F02BD4988C07EB1["pinterest"] = 0
dpsp_networks_shares_total#CAA846129901490EABE14AFA7BBE3AF3 = "0"
dpsp_networks_shares_last_updated#AD8FF96780914F40B54DAEC3AF8258D8 = "1495538525"
